<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAALEAAACxAcYtSY0AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADdElEQVRIS7WVa0hTYRjHDyaSzbY5Z5tbzrnNOZu7tLnZttq0piKZZZd1waKbhpmikyIji2KZVGbR
        PS+fCipWEl0/dIPoS0QhXT5EQlFYCZWrlKz033vmIqebmtkDvw/ned7n/z/veV7eQ40wVCwOr5HDF7VG
        RgueRTA5VSQX01cafQgimNyqyEnClkS99e2SilpUHL0G55GrWFRa3SPTmt+zuTFPwhiMTWRtVF/L8BE2
        gRlZzJ4U+zwuSd8+r2jHz/IjV1Bx7HpASuqakbXC+X2yLPkteZF7YeHhC4lGSJ/Un6C3avdRHjIutEdv
        d3wv3ucOKBqI4lo3LLkrukNCxv2kNfrp8anJCepPeRtcXUtLtn34jaNoy0e5JrVbrDQit3Abyg5dHiRa
        eqAZ2Ss3guwUfFHCD5XR5qdBwxOKX1JKc3ZnU0svLj33p/KwG4mGTCgtcxATPwVKUxboOeQWbIVUY4Yw
        QQ21bQGp52Dhus1Y7nQN0kjUpL6hau92vApmQAsU7DqN/C31SFtSQQwzkDxjLrJWb/fmiva6kZlfNrSB
        Ja/AE8xAwhchd1Wl9+Q4yQkqrDmL9fvOk9N0HfTw5xVuRaxAPLRB0rSMoJ+obsF6uBxFMCYbYNBbkTYr
        z4tBZ/XmqpeVoGZpyegMGm61wkQGeGJNJb403ERn4228IKeFpqvpDjz1N3B41SboVEaU1TSBDHWQxpAG
        NM1Pv6HMdRLTTXZYtGbkmDMx25QBs8aEGeYMOHc3wd3yFVq9FlarEQcvPvTrH9ZgIOceebz0z5192IH5
        8zNxdH8xqo5f9Kv9tUEgzj/uglgihlqjwO5Tt/1qY2JAQ38meicD82NmEAyvwXgGs1eUpIOcDG6sCWdM
        /EEJZere5VWNg+6asUCqTu2kBFLVfzOQqAxdlDwl7b5AqvwsjFe0BSMyOsbDj5MjLlGLOMVUcvkpQP5s
        HQPXieTq19XnHpyWa82t9LNEqbtAruzhg8UV3NDZlyG7wEXYBdtiJ8KZnDO+8j8FmyBhsLltKVn5sJEb
        lcbqcGJ8BOsZXfOtGUWEhqZHCeI7pRpLuyIl/ZvCOLM3yWjv+Y3CkO6RT53+hisUt5G1Nl/XyIPDE9Wl
        5qwN+Dfrj6N8D5hs7k5f28iDGcUrZXGF3bxYWTtPJHsXDHa04OOEiaxCX9uAoKhfzyZbsNpl8tkAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>