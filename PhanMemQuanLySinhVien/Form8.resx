<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOwAAADsAXkocb0AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEeklEQVRYR6WXf0xbVRTH61/OxPiHyeJiX0sLbBIiCJrNxf2QGDOzzKBJ+1pQEubMBKNmIf6YugXB
        ZIyZxcUs2dYy6Uod6uacISabg0Q2MsCaGRW2CawFymBsQFig9LX86PHe1/va29dTKOObfBKSnnO+5917
        33kXTaqCzDcfC+gsxZJgqZME0e1Ps977feveuUOltoUPKs5IpqqWyR0HWgdeqW27lF13vSrN2ZfPUlem
        oNa6ThLM3xLTGQLcWVcKlWWnIOdEF+gaPItidPQOC85bHxsc/atYudQFgvhIUGs5TEznqDHFLh6BbHs3
        arYYeuctX5rLs4OVXlpBwbSWGHYpxlNpRVCx50e0+DII652eKg3AQ8wG18yTpnxiek8xn9FZYNenTVjB
        KLtbR+G8dxq+75uC1y8MozFRXN4vmVWi2JNHzSk1u+rwQoxK9zjwmg8DFDePoLGMsM7lKWaWMYFh56qA
        IP7Nm7s3VtD9w4pEGZPmmXVMV+8E0FgFfYNnytjofYJZR8QOXNScIn5xCS2gYPzOC3ML5JFV6pkMofE8
        QoP3G2atvGqx007peOFDNFHNlZEAs43Jfv0+GstDVnZWODn0uNwAe8/jnr56twNNVLPx3CB0TQSZNUDz
        0AxkNfajsWoEp7dEnnDEUB4yPAWHO9AkDLKnsPm8D9b/NIj+noz0+p5zmsh4jTenr57xVB+axPPs2QHY
        9LMvjszTXjQWI9f2bz9Zfnm2xzVwO+stNIHH/NswIOcP3HclNB4jy34jQBoQ3eoG/numHE3geblpCMaR
        V5C+llg8BlnlBdrAmLqBsYwSNAHjHTIFeS2ngQ1Hr83TBkLqBihZdTfRJDV5ZwaYdUTLaaDwwGV5BdAG
        lhpCCitp4PPyBnkFEraAYrMcQZPUrKSBloLPJtFDSBnIfhsyHD1oIs+DNrD+6F8wZbB2kgbMdqwByv4y
        J5rM8xyZBbwmgqk1cLqwFiSd5QQZROYizJwy8lQp5B5PfvXa/uttqL95n1nHVP3nOLz4iw/NoWyrbQO/
        3goBrVnUwGrxUWLmV5srtG3+BNIdvQlFSlpGmB2uuXBY/k6o8562dUFPbhmt7afe7GMknuRN1bheOwQG
        1WjeQmZ/90QIBqdnUTpGpYSPEn21r5AHitQ122VzKnYTmuVN1TRtqyIrsfShTMYGcuiuPb9HqRcK6k3p
        zD6ioCB+xRtiPMiNmG7fvnIXjK4t5WsdZLYx0SsZ+aGDC0og79g/ccUz6pOvyJav/5DvFGy/edohc/vD
        zDZefoO4hgT4VAky9B8S3oCuxo28d6E7/z1oLtgHjYUH4YdXa6B1617oTTRVGCb3Ti2zwxUSTLkkcEiV
        CBdf2h9nfnXTR3G/p4AvJIg5zGZxTa8RV5OEy3yB9yvOyuZFlRehLyfpEyajna4uK5+a6D6RxGqCf9L4
        hjwV28lFlSuaCiEy7WqS7nkqks+FVjxGiiUdVgg01pbwqq1EdGoFdKKVzm9SvJNwl0A/5RT6d6ekMx8P
        aC2W6IRbUhrN/xZF2tlLExbGAAAAAElFTkSuQmCC
</value>
  </data>
</root>